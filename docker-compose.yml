services:
  cortana-discord-bot:
    image: ghcr.io/tristanpadiou/cortana_discord_bot:latest
    container_name: cortana-discord-bot
    pull_policy: always

    volumes:
      # Persist logs and data
      - ./logs:/app/logs:rw
      - ./data:/app/data:rw

    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - CORTANA_API_URL=http://cortana-api:8000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7860/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cortana-network
    depends_on:
      - cortana-api

  cortana-api:
    image: ghcr.io/tristanpadiou/cortana_api:latest
    container_name: cortana-api
    pull_policy: always
    ports:
      - "8000:8000"
    volumes:
      # Persist logs and data
      - ./logs:/home/user/app/logs
      - ./data:/home/user/app/data
      - ./config.yaml:/home/user/app/config.yaml:ro
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cortana-network

networks:
  cortana-network:
    driver: bridge

volumes:
  cortana-discord-bot-logs:
  cortana-discord-bot-data:
